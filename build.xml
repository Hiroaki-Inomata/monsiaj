<?xml version="1.0" encoding="us-ascii"?>
<project name="panda-client" default="jars" basedir=".">

	<!-- properties -->

	<property name="compile.debug"       value="yes"/>
	<property name="compile.deprecation" value="yes"/>
	<property name="compile.verbose"     value="no"/>
	<property name="clean.verbose"       value="no"/>

	<property name="src.dir"             value="src"/>
	<property name="build.dir"           value="bin"/>
	<property name="tmp.dir"             value="tmp"/>
	<property name="dist.dir"            value="dist"/>
	<property name="resources.dir"       value="resources"/>
	<property name="libs.dir"            value="libs"/>
	<property name="report.dir"          value="report"/>

	<property name="webstart.url"        value="http://localhost/java-client/"/>

	<property name="macosx.app.name"     value="JMAReceipt"/>
	<property name="macosx.app.stub"     value="JMAReceipt"/>

	<path id="project.class.path">
		<pathelement path="${build.dir}"/>
		<fileset dir="libs">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<!-- targets -->

	<target name="prepare"
		description="Sets the timestamp and creates directories">
		<tstamp/>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${tmp.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<property name="bin.name" value="monsiaj-bin-${DSTAMP}"/>
		<property name="bin.macosx.name" value="monsiaj-bin-macosx-${DSTAMP}"/>
		<property name="src.name" value="monsiaj-src-${DSTAMP}"/>
		<property name="replay.name" value="monsiaj-replay-${DSTAMP}"/>
		<property name="dist.bin.dir" value="${dist.dir}/${bin.name}"/>
		<property name="dist.bin.macosx.dir" value="${dist.dir}/${bin.macosx.name}"/>
		<property name="dist.src.dir" value="${dist.dir}/${src.name}"/>
		<property name="dist.replay.dir" value="${dist.dir}/${replay.name}"/>
		<mkdir dir="${dist.bin.dir}"/>
		<mkdir dir="${dist.bin.macosx.dir}"/>
		<mkdir dir="${dist.src.dir}"/>
		<mkdir dir="${dist.replay.dir}"/>
		<mkdir dir="${report.dir}"/>
		<property name="macosx.app.dir" value="${dist.bin.macosx.dir}/${macosx.app.name}.app"/>
	</target>

	<target name="compile" depends="prepare"
		description="Compiles all Java sources.">
		<javac srcdir="${src.dir}"
			destdir="${build.dir}"
			verbose="${compile.verbose}"
			deprecation="${compile.deprecation}" 
			debug="${compile.debug}"
			source="1.4">
			<include name="**/*.java"/>
			<exclude name="**/Test*.java"/>
			<classpath refid="project.class.path"/>
		</javac>
	</target>

	<target name="resources" depends="resources-copy-files,resources-copy-jnlp"/>

	<target name="resources-copy-files" depends="prepare">
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}" includes="**/*.properties,**/*.jpg,**/*.png"/>
			<fileset dir="${resources.dir}" includes="style.properties"/>
		</copy>
	</target>
	
	<target name="resources-copy-jnlp" depends="prepare">
		<native2ascii src="${resources.dir}" dest="${build.dir}"
			includes="*.jnlp" encoding="UTF-8"/>
		<filter token="webstarturl" value="${webstart.url}"/>
		<copy todir="${tmp.dir}" filtering="true">
			<fileset dir="${build.dir}" includes="*.jnlp"/>
		</copy>
		<delete verbose="${clean.verbose}" quiet="true">
			<fileset dir="${build.dir}" includes="*.jnlp"/>
		</delete>
		<native2ascii src="${tmp.dir}" dest="${build.dir}"
			includes="*.jnlp" encoding="UTF-8" reverse="true"/>
	</target>

	<target name="dist" depends="dist-bin,dist-bin-mac,dist-src"
		description="Build files to be distributed."/>

	<target name="dist-bin" depends="dist-bin-copy-files">
		<!-- ant 1.5.x should use destfile instead of zipfile-->
		<zip zipfile="${dist.bin.dir}.zip">
			<fileset dir="${dist.dir}" includes="${bin.name}/**"/>
		</zip>
	</target>

	<target name="dist-bin-copy-files" depends="jars">
		<!-- ant 1.5.x should use destfile instead of jarfile-->
		<copy todir="${dist.bin.dir}">
			<fileset dir="${build.dir}" includes="*.jar, *.jnlp"/>
			<fileset dir="${libs.dir}" includes="log4j.jar, WebKit.jar, libwebkitsample.jnilib"/>
		</copy>
	</target>

	<target name="dist-bin-mac" depends="dist-bin-mac-copy-files">
		<!-- ant 1.5.x should use destfile instead of zipfile-->
		<zip zipfile="${dist.bin.macosx.dir}.zip">
			<fileset dir="${dist.dir}" includes="${bin.macosx.name}/**"/>
		</zip>
	</target>

	<target name="dist-bin-mac-copy-files" depends="dist-bin-copy-files">
		<mkdir dir="${macosx.app.dir}"/>
		<mkdir dir="${macosx.app.dir}/Contents"/>
		<mkdir dir="${macosx.app.dir}/Contents/MacOS"/>
		<mkdir dir="${macosx.app.dir}/Contents/Resources"/>
		<mkdir dir="${macosx.app.dir}/Contents/Resources/Java"/>
		<copy todir="${macosx.app.dir}/Contents">
			<fileset dir="${resources.dir}" includes="Info.plist, PkgInfo"/>
		</copy>
		<copy todir="${macosx.app.dir}/Contents/Resources">
			<fileset dir="${resources.dir}" includes="*.lproj/**"/>
		</copy>
		<copy todir="${macosx.app.dir}/Contents/Resources/Java">
			<fileset dir="${dist.bin.dir}" includes="*.jar, *.jnilib"/>
		</copy>
		<copy todir="${macosx.app.dir}/Contents/MacOS">
			<fileset dir="${resources.dir}" includes="${macosx.app.stub}"/>
		</copy>
		<chmod perm="755" file="${macosx.app.dir}/Contents/MacOS/${macosx.app.stub}"/>
	</target>
		
	<target name="dist-src" depends="dist-src-copy-files">
		<!-- ant 1.5.x should use destfile instead of zipfile-->
		<zip zipfile="${dist.src.dir}.zip">
			<fileset dir="${dist.dir}" includes="${src.name}/**"/>
		</zip>
	</target>

	<target name="dist-src-copy-files" depends="prepare">
		<copy todir="${dist.src.dir}">
			<fileset dir="." includes="src/**,resources/**,libs/**,docs/**,build.xml,Makefile"
	excludes="**/CVS"/>
		</copy>
	</target>

	<target name="buildclean"
		description="Cleans all built files.">
		<delete verbose="${clean.verbose}" quiet="true" includeEmptyDirs="true">
			<fileset dir="${build.dir}"/>
		</delete>
		<delete dir="${tmp.dir}" verbose="${clean.verbose}" quiet="true"/>
	</target>

	<target name="clean"
		description="Cleans temporary files and outputs.">
		<delete verbose="${clean.verbose}" quiet="true">
			<fileset dir="." defaultexcludes="no" includes="**/*~,**/.#*#"/>
		</delete>
	</target>

	<target name="veryclean" depends="clean,buildclean"
		description="Cleans all generated files.">
		<delete dir="${dist.dir}" verbose="${clean.verbose}" quiet="true"/>
		<delete dir="${report.dir}" verbose="${clean.verbose}" quiet="true"/>
	</target>

	<target name="jars" depends="compile,resources">
		<jar jarfile="${build.dir}/pandaclient.jar"
			basedir="${build.dir}"
			includes="org/montsuqi/**/*.class,org/montsuqi/**/*.properties,**/*.png"
			manifest="${resources.dir}/pandaclient.mf"/>
		<jar jarfile="${build.dir}/jmareceipt.jar"
			basedir="${build.dir}"
			includes="jp/or/med/jma_receipt/**/*.class,jp/or/med/jma_receipt/**/*.properties,jp/or/med/jma_receipt/**/*.jpg"
			manifest="${resources.dir}/jmareceipt.mf"/>
		<jar jarfile="${build.dir}/libwebkitsample.jnilib.jar"
			basedir="${libs.dir}"
			includes="libwebkitsample.jnilib"/>
	</target>

	<target name="compiletests" depends="compile,resources"
		description="Compiles Test Java sources.">
		<javac srcdir="${src.dir}"
			destdir="${build.dir}"
			verbose="${compile.verbose}"
			deprecation="${compile.deprecation}"
			debug="${compile.debug}">
			<include name="**/Test*.java"/>
			<classpath refid="project.class.path"/>
		</javac>
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}" includes="org/montsuqi/tools/*.xml"/>
		</copy>
	</target>

	<target name="runtests" depends="compiletests"
		description="Run all junit test.">
		<junit printsummary="on"
			fork="false">
			<formatter type="xml"/>
			<classpath refid="project.class.path"/>
			<batchtest todir="${report.dir}">
				<fileset dir="${src.dir}">
					<include name="**/Test*.java"/>
					<exclude name="**/TestXMLRecording.java"/>
					<exclude name="**/TestXMLReplay.java"/>
				</fileset>
			</batchtest>
		</junit>

		<junitreport todir="${report.dir}">
			<fileset dir="${report.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${report.dir}"/>
		</junitreport>

	</target>

	<target name="singletest" depends="compiletests"
		description="Run single target junit test.">
		<property name="testcase"
			value="org/montsuqi/widgets/TestWindow"/>
		<junit printsummary="on"
			fork="false">
			<formatter type="plain" usefile="false"/>
			<classpath refid="project.class.path"/>
			<test name="${testcase}"/>
		</junit>
	</target>

	<target name="jar.replay" depends="compiletests,resources">
		<jar jarfile="${build.dir}/pandarecord.jar"
			basedir="${build.dir}"
			includes="org/montsuqi/tools/TestXMLRecording.class, org/montsuqi/tools/*.xml"
			manifest="${resources.dir}/pandarecord.mf"/>
		<jar jarfile="${build.dir}/pandareplay.jar"
			basedir="${build.dir}"
			includes="org/montsuqi/tools/TestXMLReplay.class, org/montsuqi/tools/XMLFileFilter.class"
			manifest="${resources.dir}/pandareplay.mf"/>
	</target>

	<target name="dist.replay" depends="dist, jar.replay, resources">
		<copy todir="${dist.replay.dir}">
			<fileset dir="${libs.dir}" includes="*.jar"/>
		</copy>
		<copy todir="${dist.replay.dir}">
			<fileset dir="${build.dir}" includes="*.jar"/>
		</copy>
		<!-- ant 1.5.x should use destfile instead of zipfile-->
		<zip zipfile="${dist.replay.dir}.zip">
			<fileset dir="${dist.dir}" includes="${replay.name}/**"/>
		</zip>
	</target>
</project>
