# monsiajのビルド

monsiajのビルドにはmavenを利用します。
maven3以降が必要となります。

## ビルド方法

以下のコマンドを実行します。

```
$ cd monsiaj-src
$ mvn package
```

ビルドに成功するとtargetディレクトリが作成され、そこにいくつかのファイルやディレクトリが作成されます。
重要なのは以下のファイルです。

* monsiaj-bin-$VERSION.zip
    * 配布用バイナリアーカイブ
        * 単体起動可能jarパッケージとREADME.txtやNimrodテーマファイルを格納
* monsiaj-src-$VERSION.zip
    * 配布用ソースアーカイブ
* monsiaj-$VERSION.zip
    * Java Web Start配布用アーカイブ

## Java Web Start配布用アーカイブの設定

Java Web Start配布用アーカイブの作成はmavenのwebstart-maven-pluginで行う。pom.xmlのwebstart-maven-pluginの設定を編集してビルドすることでJava Web Start配布URLの設定とjarファイルの署名ができる。

### Java Web Start配布URLの設定

pom.xml、webstart-maven-pluginのcodebaseの部分を編集する。

<plugin>
    ... 省略 ...
    <artifactId>webstart-maven-plugin</artifactId>
    ... 省略 ... 
    <configuration>
        ... 省略 ...
        <codebase>http://ftp.orca.med.or.jp/pub/java-client2/archives/monsiaj</codebase>
        ... 省略 ...
    </configuration>
</plugin>
```

### 署名の設定

pom.xml、webstart-maven-pluginのsignの部分をコメント解除し編集する。
Java Web Startの起動には署名が必須のため必ず設定する。

```
<plugin>
    ... 省略 ...
    <artifactId>webstart-maven-plugin</artifactId>
    ... 省略 ...
    <configuration>
        ... 省略 ...
        <sign>
            <keystore>${project.basedir}/keystore</keystore>
            <keypass>keypass</keypass> 
            <storepass>storepass</storepass>
            <alias>alias</alias>
            <tsaLocation>http://timestamp.globalsign.com/scripts/timstamp.dll</tsaLocation>
            <verify>true</verify>
        </sign>
        ... 省略 ...
    </configuration>
</plugin>
```

* keystore
    * keystoreファイルのパスを入力する
    * ${project.basedir}はpom.xmlのあるディレクトリに置換される
* keypass
    * keystoreに格納されている秘密鍵のパスフレーズを入力する
* storepass
    * keystoreのパスフレーズを入力する
* alias
    * 証明書のaliasを指定する
* tsaLocation
    * 証明書のTSAのURLを指定する

